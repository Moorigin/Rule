name: Config Update

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: "Setup sing-box"
      env:
        SING_BOX_DEB_URL: "https://github.com/SagerNet/sing-box/releases/download/v1.10.1/sing-box_1.10.1_linux_amd64.deb"
      run: |
          set -Eeuo pipefail
          wget -O sing-box.deb $SING_BOX_DEB_URL
          sudo dpkg -i sing-box.deb
    - name: Set up Python3
      uses: actions/setup-python@v4
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas requests pyyaml
    - name: Download and Convert Rules
      run: |
        # 创建必要的目录
        mkdir -p "./Sing-Box/Rule/AdGuard"
        
        # 定义规则列表
        declare -A rules=(
          ["AdGuardSDNSFilter"]="https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt"
          ["HalfLife"]="https://cdn.jsdelivr.net/gh/o0HalfLife0o/list@master/ad.txt"
          ["anti-AD"]="https://anti-ad.net/easylist.txt"
        )
        
        # 循环下载和转换每个规则
        for rule_name in "${!rules[@]}"; do
          URL="${rules[$rule_name]}"
          OUTPUT_FILE="./Sing-Box/Rule/AdGuard/${rule_name}.txt"
          
          echo "Downloading ${rule_name}..."
          curl -L "$URL" -o "$OUTPUT_FILE"
          
          if [ -f "$OUTPUT_FILE" ]; then
            echo "Download successful: $OUTPUT_FILE"
            echo "Converting ${rule_name} to sing-box rule set..."
            
            # 添加错误检查和详细输出
            if ! sing-box rule-set convert --type adguard --output "./Sing-Box/Rule/AdGuard/${rule_name}.srs" "$OUTPUT_FILE" 2>&1; then
              echo "Conversion failed for ${rule_name}"
              echo "Content of ${OUTPUT_FILE}:"
              head -n 5 "$OUTPUT_FILE"
              exit 1
            fi
            
            # 检查转换后的文件是否存在
            if [ ! -f "./Sing-Box/Rule/AdGuard/${rule_name}.srs" ]; then
              echo "Conversion failed: Output file not created for ${rule_name}"
              exit 1
            fi
            
            echo "Successfully converted ${rule_name}"
          else
            echo "Download failed for ${rule_name}"
            exit 1
          fi
        done
    - name: Run script
      run: python ../main.py
      working-directory: ./Sing-Box
    - name: Commit and push config.json
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add ./Sing-Box/Rule/*.json
        git add ./Sing-Box/Rule/*.srs
        git add ./Sing-Box/Rule/*.txt

        # 检查是否有文件被修改
        if git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        else
          git commit -m "Update rules"
          git push
        fi
